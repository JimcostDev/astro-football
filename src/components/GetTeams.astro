---
import { getAllTeamsOrGetTeamsByLeague } from "../api/loadData.js";
import CardTeams from "../components/CardTeams.astro";

// Obtener el valor del parámetro de consulta 'league_name'
const searchParams = Astro.url.searchParams; 
const leagueName = searchParams.get("league_name"); 
console.log("Search Params:", Array.from(searchParams.entries()));
console.log("League Name:", leagueName);

// Inicializar un array vacío para los datos del equipo
let getTeams = [];

// Obtener los equipos según el parámetro de consulta
const teamData = await getAllTeamsOrGetTeamsByLeague(leagueName ?? ''); 
getTeams = Array.isArray(teamData) ? teamData : [];
---

<div class="container mx-auto flex justify-between items-center my-3">
  <a href="/" class="text-blue-800 text-3xl font-bold">JimcostDev Football</a>
  <nav>
    <form class="flex items-center" action="/" method="GET">
      <select
        id="league-filter"
        name="league_name"
        class="border border-gray-300 rounded-md px-4 py-2 mr-2"
      >
        <option value="">Todas las ligas</option>
        <option value="Premier League">Premier League</option>
        <option value="La Liga">La Liga</option>
        <option value="Serie A">Serie A</option>
        <option value="Bundesliga">Bundesliga</option>
        <option value="Ligue 1 Uber Eats">Ligue 1 Uber Eats</option>
      </select>
      <button
        type="submit"
        class="bg-blue-500 hover:bg-blue-700 text-white font-bold py-2 px-4 rounded"
      >Buscar</button>
    </form>
  </nav>
</div>

{leagueName && (
  <p class="text-green-500 font-medium text-lg my-2">Liga: {leagueName}</p>
)}

<div class="grid grid-cols-1 sm:grid-cols-2 md:grid-cols-3 gap-4">
  {getTeams.length > 0 ? (
    getTeams.map(({ name, league, country }) => (
      <CardTeams name={name} league={league} country={country} />
    ))
  ) : (
    <p class="mx-5 text-wrap text-center font-light text-red-500/90">
      No se encontraron equipos para la liga seleccionada.
    </p>
  )}
</div>
